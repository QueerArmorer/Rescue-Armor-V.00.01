import os
import platform
import subprocess

def check_os_architecture():
    return platform.architecture()[0]

def check_if_malwarebytes_is_installed():
    malwarebytes_installed = False
    malwarebytes_path = ""
    
    for root, dirs, files in os.walk("C:\\Program Files\\Malwarebytes Anti-Rootkit"):
        for file in files:
            if file.endswith(".exe") and file.startswith("mbar"):
                malwarebytes_path = os.path.join(root, file)
                malwarebytes_installed = True
                break
        
        if malwarebytes_installed:
            break

    return malwarebytes_installed, malwarebytes_path

def download_malwarebytes():
    print("Downloading Malwarebytes Anti-Rootkit...")
    
    if check_os_architecture() == "32bit":
        download_url = "https://downloads.malwarebytes.com/file/antirootkit"
        file_name = "mbarkit.exe"
    else:
        download_url = "https://downloads.malwarebytes.com/file/mb4_rootkit"
        file_name = "mbarkit64.exe"
    
    subprocess.run(["powershell.exe", "-Command", f"Invoke-WebRequest -Uri {download_url} -OutFile {file_name}"])

def install_malwarebytes():
    if check_os_architecture() == "32bit":
        subprocess.run("mbarkit.exe")
    else:
        subprocess.run("mbarkit64.exe")

def run_malwarebytes():
    print("Running Malwarebytes Anti-Rootkit...")
    subprocess.run(["C:\\Program Files\\Malwarebytes Anti-Rootkit\\mbar.exe", "/quickscan", "/delete"])
    
malwarebytes_installed, malwarebytes_path = check_if_malwarebytes_is_installed()

if not malwarebytes_installed:
    print("Malwarebytes Anti-Rootkit is not installed.")
    answer = input("Do you want to download and install it? (y/n) ")
    
    if answer.lower() == "y":
        download_malwarebytes()
        install_malwarebytes()
    else:
        print("WARNING: Not installing Malwarebytes Anti-Rootkit means abandoning the Rescue Armor install.")
        exit(0)

run_malwarebytes()

